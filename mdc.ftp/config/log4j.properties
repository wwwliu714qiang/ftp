#如果想去掉哪一级日志就将第一个级别改成对应的级别即可,如果不想生成相关的日志文件，将后面4个对应级别中的不想要的删掉即可
log4j.rootLogger = debug,stdout,debug,info,warn,error
### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%c] %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] Method:%l%n[%t] %m%n
###注意：此类为重写的log4j的RollingFileAppender，将各级日志分不同文件输出
log4j.appender.debug= com.chy.mdc.common.util.log.IDailyRollingFileAppender
log4j.appender.debug.encoding=UTF-8
### 输出DEBUG 级别的日志 ###
log4j.appender.debug.File = ../logs/debug.#{yyyy-MM-dd-HH}.log
log4j.appender.debug.Append = true
log4j.appender.debug.Threshold = DEBUG
log4j.appender.debug.layout = org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern = [%c] [%d{yyyy-MM-dd HH\:mm\:ss.SSS}] [%p]%n%m%n
### 输出INFO 级别的日志 ###
log4j.appender.info= com.chy.mdc.common.util.log.IDailyRollingFileAppender
log4j.appender.info.encoding=UTF-8
log4j.appender.info.File = ../logs/info.#{yyyy-MM-dd-HH}.log
log4j.appender.info.Append = true
log4j.appender.info.Threshold = INFO
log4j.appender.info.layout = org.apache.log4j.PatternLayout
log4j.appender.info.layout.ConversionPattern = [%c] [%d{yyyy-MM-dd HH\:mm\:ss.SSS}] [%p]%n%m%n
### 输出ERROR 级别的日志 ###
log4j.appender.warn = com.chy.mdc.common.util.log.IDailyRollingFileAppender
log4j.appender.warn.encoding=UTF-8
log4j.appender.warn.File = ../logs/warn.#{yyyy-MM-dd-HH}.log
log4j.appender.warn.Append = true
log4j.appender.warn.Threshold = WARN
log4j.appender.warn.layout = org.apache.log4j.PatternLayout
log4j.appender.warn.layout.ConversionPattern = [%c] [%d{yyyy-MM-dd HH\:mm\:ss.SSS}] [%p]%n%m%n
### 输出ERROR 级别的日志 ###
log4j.appender.error = com.chy.mdc.common.util.log.IDailyRollingFileAppender
log4j.appender.error.encoding=UTF-8
log4j.appender.error.File = ../logs/error.#{yyyy-MM-dd-HH}.log
log4j.appender.error.Append = true
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern = [%c] [%d{yyyy-MM-dd HH\:mm\:ss.SSS}] [%p]%n%m%n